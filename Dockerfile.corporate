# Corporate-friendly Jenkins MCP Server Docker Image
# 
# This Dockerfile is designed for corporate environments where:
# 1. SSL certificate issues may prevent downloading Deno runtime during build
# 2. Internet access may be restricted or go through corporate proxies
# 
# Solution: Build the binary locally and copy it into the container,
# avoiding any network downloads during the Docker build process.
#
# Build with: docker build -f Dockerfile.corporate -t jenkins-mcp-server:corporate .

# Use AMD64 architecture explicitly for x86_64 Linux binary compatibility
FROM --platform=linux/amd64 debian:12-slim

# Install ca-certificates for HTTPS connections and update certificates
RUN apt-get update && \
    apt-get install -y ca-certificates curl && \
    update-ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r mcp && useradd -r -g mcp mcp

# Set working directory
WORKDIR /app

# Copy the locally built Linux binary (built with 'make build-linux')
COPY jenkins-mcp-server-linux-x64 /usr/local/bin/jenkins-mcp-server

# Make binary executable and owned by mcp user
RUN chmod +x /usr/local/bin/jenkins-mcp-server && \
    chown mcp:mcp /usr/local/bin/jenkins-mcp-server

# Switch to non-root user
USER mcp

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD echo '{"jsonrpc":"2.0","id":1,"method":"tools/list","params":{}}' | jenkins-mcp-server >/dev/null 2>&1 || exit 1

# Expose the default port (if using HTTP mode)
EXPOSE 3000

# Default command
ENTRYPOINT ["/usr/local/bin/jenkins-mcp-server"]
